{"version":3,"sources":["webpack://salemoche_essentials/./src/scss/main.scss","webpack://salemoche_essentials/./src/scss/0_settings/_typography.scss","webpack://salemoche_essentials/./src/scss/1_tools/_sm-grid.scss","webpack://salemoche_essentials/./src/scss/1_tools/_mixins.scss","webpack://salemoche_essentials/./src/scss/0_settings/_variables.scss","webpack://salemoche_essentials/./src/scss/3_generic/_atoms.scss","webpack://salemoche_essentials/./src/scss/3_generic/_molecules.scss"],"names":[],"mappings":"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","file":"css/main.css","sourcesContent":["/**\n * ========================================\n * \n * Main styles\n * \n * ========================================\n */\n\n// Essentials\n\n@import './essentials';\n\n// Generic\n\n@import './3_generic/generic';","/** =============================================\n*\n*   Typography styles\n*\n============================================= */\n\nbody {\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n}\n\n$body-text: (\n    'body': (\n        'small': (\n            font-size: 16px,\n            line-height: 1.5,\n        )\n    ),\n    'h1': (\n        'small': (\n            font-size: 72px,\n            line-height: 1.111\n        )\n    ),\n    'h2': (\n        'small': (\n            font-size: 48px,\n            line-height: 1.1666,\n        )\n    ),\n    'h3': (\n        'small': (\n            font-size: 24px,\n            line-height: 1.333,\n        )\n    ),\n    'h4': (\n        'small': (\n            font-size: 24px,\n            line-height: 1.333,\n        )\n    ),\n    'h5': (\n        'small': (\n            font-size: 48px,\n            line-height: 1.5\n        )\n    ),\n    'h6': (\n        'small': (\n            font-size: 48px,\n            line-height: 1.5\n        )\n    ),\n    'p': (\n        'small': (\n            font-size: 16px,\n            line-height: 1.5\n        )\n    ),\n    'menu title': (\n        'small': (\n            font-size: 28px,\n            line-height: 1.142,\n        )\n    ),\n    'menu item': (\n        'small': (\n            font-size: 18px,\n            line-height: 1.111,\n        )\n    ),\n    'header lead': (\n        'small': (\n            font-size: 32px,\n            line-height: 1.125\n        )\n    )\n) !default;","/**\n*========================================\n*\t\n*\tThe Salemoche Grid\n*\n*   Version 1.0\n*\n*   Developed by Gabriel Bach\n*\n*\n*========================================\n*   \n*   Modifiers:\n*       \n// *   Row\n// \n// *       .justify-center:    justifies flexbox to the center\n        .full               removes padding\n*       \n*   Block\n*       .full:              makes block full width\n*       .justify-start:     justifies flexbox to the start\n*       .no-wrap:           disallows flexbox wrap\n*       \n*   Column\n*       .grow:              allows column to grow to fill content\n*       .no-gutter:         removes the margi on the siden\n*/\n\n\n/**\n*========================================\n*\t\n*\tSet Grid Variables\n*\t\n*========================================\n*/\n\n//SM: save values in a map so that we can use the key as a breakpoint\n\n$sm-grid: (\n    \"content_width\": $content_width,\n    \"column_count\": 12,\n    \"column_gutter\": 8px,\n    \"column_side\": 8px,\n    \"row_height\": 16px,\n    \"huge\": (\n        \"breakpoint\": 1800px,\n        \"column_count\": 12,\n        \"column_gutter\": 8px,\n        \"column_side\": 8px,\n        \"row_height\": 16px,\n    ),\n    \"xlarge\": (\n        \"breakpoint\": 1400px,\n        \"column_count\": 12,\n        \"column_gutter\": 8px,\n        \"column_side\": 8px,\n        \"row_height\": 16px,\n    ),\n    \"large\": (\n        \"breakpoint\": 1024px,\n        \"column_count\": 12,\n        \"column_gutter\": 8px,\n        \"column_side\": 8px,\n        \"row_height\": 16px,\n    ),\n    \"medium\": (\n        \"breakpoint\": 768px,\n        \"column_count\": 6,\n        \"column_gutter\": 8px,\n        \"column_side\": 8px,\n        \"row_height\": 16px,\n    ),\n    \"small\": (\n        \"breakpoint\": 420px,\n        \"column_count\": 6,\n        \"column_gutter\": 8px,\n        \"column_side\": 8px,\n        \"row_height\": 16px,\n    ),\n    \"xsmall\": (\n        \"breakpoint\": 320px,\n        \"column_count\": 6,\n        \"column_gutter\": 8px,\n        \"column_side\": 8px,\n        \"row_height\": 16px,\n    )\n) !default;\n\n/* SM: save values in a function so that we can calculate the values for each breakpoint */\n/* SM: make props.. variables that default to the default in sm-grid (change later) */\n/* SM-TODO change instances of $column-width */\n\n@function sm-calculate-column-width($column_count: #{map_get($sm-grid, \"column_count\")}, $column_gutter: #{map_get($sm-grid, \"column_gutter\")}, $column_side: #{map_get($sm-grid, \"column_side\")}, $breakpoint: \"1024px\") {\n    \n    $sm-column-width: calc( (100% - ((#{$column_count} - 1) * #{$column_gutter}) + (#{$column_side} * 2) ) / #{$column_count});\n    @return $sm-column-width;\n\n/* SM-TODO change function so that it goes to 100vw / 100% depending on the breakpoint */\n\n    @if #{$breakpoint} <= $content-width {\n        $sm-column-width: calc( (100vw - (((#{$column_count} - 1) * #{$column_gutter}) + (#{$column_side} * 2) )) / #{$column_count});\n        @return $sm-column-width;\n    } @else {\n        $sm-column-width: calc( (100% - (((#{$column_count} - 1) * #{$column_gutter}) + (#{$column_side} * 2) )) / #{$column_count});\n        @return $sm-column-width;\n    }\n\n}\n\n@function sm-calculate-padding-side($column_count: #{map_get($sm-grid, \"column_count\")}) {\n    $sm-padding-side: calc(100vw / (#{$column_count} + 2));\n    @return $sm-padding-side;\n}\n\n@function sm-calculate-padding-side--wide($column_count: #{map_get($sm-grid, \"column_count\")}, $content-width: $content-width) {\n    $sm-padding-side--wide: calc(#{$content-width} / (#{$column_count} + 2));\n    @return $sm-padding-side--wide;\n}\n\n@function sm-get-row-height($count: 1, $row_height: #{map_get($sm-grid, \"row_height\")}) {\n    @return calc( #{$row_height} * #{$count});\n}\n\n\n\n\n/**\n*========================================\n*\t\n*\tCalculate Column Width and Row Height Mixin\n*\t\n*========================================\n*/\n\n@mixin sm-times-column ($property: \"\", $count: 1) {\n\n    #{$property}: calc(#{sm-calculate-column-width()} * #{$count});\n}\n\n@mixin sm-column-width($count, $gutter: \"gutter\", $breakpoint: 1024px, $column_count: #{map_get($sm-grid, \"column_count\")}, $column_gutter: #{map_get($sm-grid, \"column_gutter\")}, $column_side: #{map_get($sm-grid, \"column_side\")}) {\n\n    @if $gutter == \"gutter\" {\n\n        /* SM-TODO: SM: Check why this shit always returns true */\n\n        @if ($breakpoint >= map_get($sm-grid, \"content_width\")) {\n            // width: calc((#{map_get($sm-grid, \"content_width\")} / #{$column_count}) * #{$count});\n            width: calc((100% / #{$column_count}) * #{$count});\n        } @else {\n            // width: calc((100vw / #{$column_count}) * #{$count});\n            width: calc((100% / #{$column_count}) * #{$count});\n        }\n\n        /* SM-TODO: SM: Check if the ount doesn't surpass the column count */\n        // @if #{$count} <= #{$column_count} {\n        //     // width: calc( #{sm-calculate-column-width(#{$column_count}, #{$column_gutter}, #{$column_side}, #{$breakpoint})} * #{$count} + #{$column_gutter} * (#{$count} - 1) );\n        //     width: calc(100% / #{$count});\n        // } @else {\n        //     width: 100%;\n        //     background: pink;\n        // }\n        \n        // margin-left: calc( #{$column_gutter} / 2);\n        // margin-right: calc( #{$column_gutter} / 2);\n        \n        padding-left: calc( #{$column_gutter} / 2);\n        padding-right: calc( #{$column_gutter} / 2);\n    } else {\n        width: calc( (#{sm-calculate-column-width()} + #{$column_gutter}));\n    }\n}\n\n@mixin sm-row($count, $breakpoint: \"1024\") {\n    height: calc( #{map_get($sm-grid, \"row_height\")} * #{$count});\n}\n\n/**\n*========================================\n*\t\n*\tInitiate Salemoche Grid\n*\t\n*========================================\n*/\n\n.sm-row {\n    width: 100%;\n    display: flex;\n    flex-wrap: wrap;\n    margin: 0 auto;\n\n    &.full {\n        width: 100%;\n        padding-left: 0;\n        padding-right: 0;\n    }\n\n    &[class*=\"-no-wrap\"], &.no-wrap {\n        flex-wrap: nowrap;\n    }\n\n    &[class*=\"-justify-center\"], &.justify-center {\n        justify-content: center;\n    }\n\n    &[class*=\"-no_gutter\"], &.no_gutter {\n        padding: 0;\n    }\n}\n\n\n/* SM-TODO: Check how to display gutenberg default blocks in the correct content size  */\n.wp-block {\n    max-width: unset;\n}\n// .is-root-container > div.wp-block, div.wp-block-group {\n//     display: flex;\n//     justify-content: center;\n//     flex-wrap: wrap;\n// }\n\n/* Style Debug Grid */\n.sm-grid {\n    display: none;\n    display: inherit;\n    z-index: 10000;\n    position: fixed;\n    height: 100vh;\n\n    .sm-block {\n        .sm-col {\n            border: 1px solid #ff0000;\n            background: #ff000022;\n            height: 100vh;\n        }\n    }\n}\n\n\n/* Initiate Block */\n.sm-block, .is-root-container > div.wp-block, div.wp-block-group {\n    /* SM-TODO: Check if justify-content: space-between and flex-grow 1 wouldn't be better as a standard */\n    @include content_width;\n    margin-left: auto;\n    margin-right: auto;\n    display: flex;\n    justify-content: flex-start;\n    flex-wrap: wrap;\n\n    &.full, &[data-align=\"full\"], &.alignfull {\n        width: 100%;\n        max-width: unset;\n        margin-left: 0 !important;\n        margin-right: 0 !important;\n\n        > .wp-block-group {\n            // width: 100%;\n            // max-width: unset;\n            // margin-left: 0 !important;\n            // margin-right: 0 !important;\n            @extend .alignfull\n        }\n    }\n\n    &.wide, &[data-align=\"wide\"], &.alignwide {\n        width: $content-width;\n    }\n\n    &.wp-block-group {\n        width: 100%;\n        max-width: 100vw;\n\n        .wp-block-group__inner-container {\n            @include content_width;\n        }\n    }\n\n    &.justify-start {\n        justify-content: start;\n    }\n\n    &.no-wrap {\n        flex-wrap: nowrap;\n    }\n\n    /* Gutenberg Block Group Inner Container */\n    > .wp-block-group__inner-container {\n        @extend .sm-block;\n    }\n\n    /* Initiate Columns */\n    .sm-col {\n        // background: green;\n        @include sm-column-width(6, \"gutter\");\n        display: inline-block;\n        flex-grow: 0;\n        \n\n        // @media screen and (min-width: map_get($sm-grid, \"content-width\")) {\n        //     &.sm-col.sm-#{$breakpoint_name}-#{$i} {\n        //         @include sm-column-width($i, \"gutter\", $breakpoint: map_get($variables, \"breakpoint\"), $column_count: map_get($variables, \"column_count\"), $column_gutter: map_get($variables, \"column_gutter\"), $column_side: map_get($variables, \"column_side\") );\n\n        //     }\n        // }\n\n        /* SM: Loop through each breakpoint in sm-grid */\n        @each $breakpoint_name, $variables in $sm-grid {\n\n            /* SM: If it's a map use the name as a breakpoint and loop through its values */\n            @if type-of($variables) == \"map\" {\n                @media screen and (max-width: #{map_get($variables, \"breakpoint\")}) {\n\n                    /* SM: Loop through each column depending on the class number and add styling to it*/\n                    @for $i from 1 through map_get($variables, \"column_count\") {\n\n                        /* SM: Style all sm-col columns to the right size if they have breakpoint in their name*/\n                        &.sm-#{$breakpoint_name}-#{$i} {\n                            /* SM: Call the mixin which in turn uses the value to call the call the function */\n                            @include sm-column-width($i, \"gutter\", $breakpoint: map_get($variables, \"breakpoint\"), $column_count: map_get($variables, \"column_count\"), $column_gutter: map_get($variables, \"column_gutter\"), $column_side: map_get($variables, \"column_side\") );\n                        }\n                    }\n                }\n                \n                /* SM: Take first Map as a large screen breakpoint */\n                @if $breakpoint_name == \"large\" or $breakpoint_name == \"huge\" {\n                    @media screen and (min-width: #{map_get($variables, \"breakpoint\")}) {\n\n                        /* SM: Loop through each column depending on the class number and add styling to it*/\n                        @for $j from 1 through map_get($variables, \"column_count\") {\n\n                            /* SM: Style all sm-col columns to the right size if they have breakpoint in their name*/\n                            &.sm-col.sm-#{$breakpoint_name}-#{$j} {\n                                /* SM: Call the mixin which in turn uses the value to call the call the function */\n                                @include sm-column-width($j, \"gutter\", $breakpoint: map_get($variables, \"breakpoint\"), $column_count: map_get($variables, \"column_count\"), $column_gutter: map_get($variables, \"column_gutter\"), $column_side: map_get($variables, \"column_side\") );\n                            }\n                        }\n                    }\n                }\n            }\n\n        }\n\n        &[class*=\"-grow\"], &.grow {\n            flex-grow: 1;\n        }\n\n        &[class*=\"-no_gutter\"], &.no_gutter {\n            margin-left: 0;\n            margin-right: 0;\n            padding-left: 0 !important;\n            padding-right: 0 !important;\n        }\n    }\n}\n\n//=====================\n// Gutenberg Support\n//=====================\n\n// .editor-styles-wrapper .block-editor-block-list__layout.is-root-container>.wp-block[data-align=full] {\n//     margin-left: 0px;\n//     margin-right: 0px;\n// }\n\n\n/* Make necessary blocks full width */\n.block-editor-block-list__layout {\n    width: 100%;\n}\n\n// .is-root-container, .wp-the-content {\n// \t[data-align=\"wide\"], [data-align=\"wide\"] .wp-block, > * {\n// \t\twidth: 100%;\n//         max-width: map_get( $sizes, \"content-narrow\" );\n//         margin: 0 auto;\n// \t}\n// }\n\n// .is-root-container, .wp-the-content {\n// \t[data-align=\"full\"], [data-align=\"full\"] .wp-block, .alignfull, .allignfull > * {\n// \t\twidth: 100%;\n//         max-width: map_get( $sizes, \"content-wide\" );\n        \n//         @include mq($until: xlarge) {\n//             padding: 0 sm-calculate-padding-side();\n//         }\n\n//         @include mq($from: xlarge) {\n//             padding: 0 sm-calculate-padding-side--wide();\n//         }\n// \t}\n// }\n","@mixin body-text( $level: normal, $body-text: $body-text, $device-size: false ) {\n\t@if type-of($body-text) != \"map\" {\n\t\t@error \"`#{$body-text}` is not a valid value for $values. It must be a list.\";\n\t}\n\n\t$size: map_get($body-text, $level);\n\n\t@if type-of($size) == \"map\" {\n\n\t\t@if $device-size == false {\n\t\t\t@each $device, $values in $size {\n\t\t\t\t@if $device != \"small\" {\n\t\t\t\t\t@include mq($from: $device) {\n\t\t\t\t\t\tfont-size: map_get($values, \"font-size\");\n\t\t\t\t\t\tline-height: map_get($values, \"line-height\");\n\t\t\t\t\t\tcolor: map_get($values, \"color\");\n\t\t\t\t\t\tfont-family: map_get($values, \"font-family\");\n\t\t\t\t\t}\n\t\t\t\t} @else {\n\t\t\t\t\tfont-size: map_get($values, \"font-size\");\n\t\t\t\t\tline-height: map_get($values, \"line-height\");\n\t\t\t\t\tcolor: map_get($values, \"color\");\n\t\t\t\t\tfont-family: map_get($values, \"font-family\");\n\t\t\t\t}\n\t\t\t}\n\t\t} @else {\n\t\t\t$device_values: map_get($size, $device-size);\n\n\t\t\tfont-size: map_get($device_values, \"font-size\");\n\t\t\tline-height: map_get($device_values, \"line-height\");\n\t\t\tcolor: map_get($device_values, \"color\");\n\t\t\tfont-family: map_get($device_values, \"font-family\");\n\t\t}\n\t}\n}\n\n@mixin content_width () {\n\twidth: 100%;\n\n\t@media screen and (min-width: map_get( $sizes, \"content-wide\" )) {\n\t\tmax-width: map_get( $sizes, \"content-wide\" );\n\t}\n\n\t@media screen and (max-width: map_get( $sizes, \"content-wide\" )) {\n\t\tmax-width: 100%;\n\t}\n}\n\n@mixin responsive($property, $variable) {\n\n\t@include mq($from: xlarge) {\n\t\t#{$property}: map_get($variable, \"huge\");\n\t}\n\n\t@include mq($until: xlarge) {\n\t\t#{$property}: map_get($variable, \"xlarge\");\n\t}\n\n\t@include mq($until: large) {\n\t\t#{$property}: map_get($variable, \"large\");\n\t}\n\n\t@include mq($until: medium) {\n\t\t#{$property}: map_get($variable, \"medium\");\n\t}\n\t\n\t@include mq($until: small) {\n\t\t#{$property}: map_get($variable, \"small\");\n\t}\n\n}\n\n@mixin bg( $image ) {\n\tbackground-size: contain;\n\tbackground-repeat: no-repeat;\n\tbackground-position: center;\n\tbackground-image: url('../img/#{$image}');\n}\n\n//SM-TODO: check if we can use a map here\n\n@mixin hover( $property: 'transform', $value: 'scale(1.01)') {\n\ttransition: $transition-long;\n\n\t&:hover {\n\t\t#{$property}: #{$value};\n\t}\n}\n\n@mixin sm-mask( $image ) {\n\n    mask-image: url('../img/#{$image}');\n    -webkit-mask-image: url('../img/#{$image}');\n    mask-repeat: no-repeat;\n    -webkit-mask-repeat: no-repeat;\n    mask-position: center;\n    -webkit-mask-position: center;\n    mask-size: contain;\n    -webkit-mask-size: contain;\n\n\timg {\n\t\twidth: 100%;\n\t\theight: 100%;\n\t\tobject-fit: cover;\n\t\tobject-position: cover;\n\t}\n}\n\n@mixin sm-after_icon( $content: \"→\", $offset: #{map_get( $spacing, \"regular\" )}, $spacing: #{map_get( $spacing, \"regular\" )}) {\n\n    padding-right: calc( #{$spacing} * 2 + #{$offset} );;\n    position: relative;\n\n\t&::after {\n\t\tcontent: \"#{$content}\";\n\t\tposition: absolute;\n\t\tright: #{$offset};\n        margin-top: 1px;\n\t}\n}\n\n@mixin sm-before_icon( $content: \"→\", $offset: #{map_get( $spacing, \"regular\" )}, $spacing: #{map_get( $spacing, \"regular\" )}) {\n\n    padding-right: calc( #{$spacing} * 2 + #{$offset} );;\n    position: relative;\n\n\t&::before {\n\t\tcontent: \"#{$content}\";\n\t\tposition: absolute;\n\t\tright: #{$offset};\n        margin-top: 1px;\n\t}\n}","$content-width: 1240px !default;\n$content-width--narrow: 768px !default;\n\n$mq-breakpoints: (\n\tsmall: 420px,\n\tmedium: 768px,\n\tlarge: 1024px,\n\txlarge: $content-width\n) !default;\n\n\n// $sm-grid: (\n//     \"content_width\": $content-width,\n//     \"column_count\": 12,\n//     \"column_gutter\": 8px,\n//     \"column_side\": 12px,\n//     \"row_height\": 16px,\n//     \"large\": (\n//         \"breakpoint\": 1024px,\n//         \"column_count\": 12,\n//         \"column_gutter\": 8px,\n//         \"column_side\": 12px,\n//         \"row_height\": 16px,\n//     ),\n//     \"medium\": (\n//         \"breakpoint\": 768px,\n//         \"column_count\": 12,\n//         \"column_gutter\": 8px,\n//         \"column_side\": 12px,\n//         \"row_height\": 16px,\n//     ),\n//     \"small\": (\n//         \"breakpoint\": 420px,\n//         \"column_count\": 6,\n//         \"column_gutter\": 8px,\n//         \"column_side\": 12px,\n//         \"row_height\": 16px,\n//     )\n// ) !default;\n\n$spacing: (\n\t\"extra-small\": 4px,\n\t\"small\": 8px,\n\t\"regular\": 16px,\n\t\"large\": 32px,\n\t\"extra-large\": 64px,\n\t\"extra-extra-large\": 128px\n) !default;;\n\n$sizes: (\n\t\"extra-small\": 4px,\n\t\"small\": 8px,\n\t\"regular\": 16px,\n\t\"large\": 32px,\n\t\"extra-large\": 64px,\n\t\"extra-extra-large\": 128px,\n\t\"content-narrow\": $content-width--narrow,\n\t\"content-wide\": $content-width\n) !default;\n\n$transition-long: .3s !default;;","/** =============================================\n*\n*   Atoms styles\n*\n============================================= */\n","/**\n*========================================\n*\t\n*\tMolecules\n*\t\n*========================================\n*/\n\n\n.sm-debug {\n    position: fixed;\n    height: 90vh;\n    width: 100vw;\n    max-width: 600px;\n    overflow: scroll;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    background: #ddd;\n    z-index: 100000;\n    padding: 20px;\n}"],"sourceRoot":""}